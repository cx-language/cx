# -*- Python -*-
# Configuration file for the LLVM Integrated Tester.

import lit.formats
import os
import platform

cx_path = lit_config.params.get("cx_path")
helper_scripts_path = lit_config.params.get("test_helper_scripts_path")

env = dict(os.environ)
# Uncomment this to print compiler stack traces for debugging test failures:
# env["CX_PRINT_STACK_TRACE"] = "true"

config.name = "cx"
config.test_format = lit.formats.ShTest()
config.suffixes = [".cx"]
config.excludes = ["inputs"]
config.test_source_root = os.path.dirname(__file__)
config.substitutions.append(("%cx", cx_path))
config.substitutions.append(("%FileCheck", lit_config.params.get("filecheck_path") + " -implicit-check-not error:"))
config.substitutions.append(("check_exit_status", "python '" + helper_scripts_path + "/check_exit_status'"))
config.substitutions.append(("check-snapshots", "python '" + helper_scripts_path + "/check-snapshots' '" + cx_path + "' '%s'"))
config.substitutions.append(("%not", "python '" + helper_scripts_path + "/not'"))
config.substitutions.append(("cat", "python '" + helper_scripts_path + "/cat'"))
config.substitutions.append(("true", "python '" + helper_scripts_path + "/true'"))
config.environment = env
config.target_triple = ""
config.available_features.add(platform.system().lower())


int main() {
    C* _0 = alloca C
    int[5]* _1 = alloca int[5]
    int[5] _2 = insertvalue int[5] undefined, 0, int 0
    int[5] _3 = insertvalue _2, 1, int 1
    int[5] _4 = insertvalue _3, 2, int 2
    int[5] _5 = insertvalue _4, 3, int 3
    int[5] _6 = insertvalue _5, 4, int 4
    store _6 to _1
    int* _7 = getelementptr _1, 0
    ArrayRef<int> _8 = insertvalue ArrayRef<int> undefined, 0, _7
    ArrayRef<int> _9 = insertvalue _8, 1, int 5
    void _10 = call _EN4main1C4initEAR_3int(C* _0, ArrayRef<int> _9)
    void _11 = call _EN4main1C3fooE(C* _0)
    return int 0
}

void _EN4main1C3fooE(C* this) {
    ArrayRef<int>* a = getelementptr this, 0
    ArrayRef<int> a.load = load a
    int* _0 = extractvalue a.load, 0
    int* _1 = getelementptr _0, int 4
    return void
}

void _EN4main1C4initEAR_3int(C* this, ArrayRef<int> a) {
    ArrayRef<int>* a_0 = getelementptr this, 0
    store a to a_0
    return void
}

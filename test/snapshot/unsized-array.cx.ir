
int main() {
    int[3]* three = alloca int[3]
    int* b = alloca int
    ArrayRef<int>* ref = alloca ArrayRef<int>
    int* bb = alloca int
    int[3] _0 = insertvalue int[3] undefined, 0, int 0
    int[3] _1 = insertvalue _0, 1, int 42
    int[3] _2 = insertvalue _1, 2, int 0
    store _2 to three
    int* _3 = getelementptr three, 0
    ArrayRef<int> _4 = insertvalue ArrayRef<int> undefined, 0, _3
    ArrayRef<int> _5 = insertvalue _4, 1, int 3
    void _6 = call _EN4main3fooE8ArrayRefI3intE(ArrayRef<int> _5)
    void _7 = call _EN4main3barEPA3_3int(int[3]* three)
    store int 3 to b
    int* _8 = getelementptr three, 0
    ArrayRef<int> _9 = insertvalue ArrayRef<int> undefined, 0, _8
    ArrayRef<int> _10 = insertvalue _9, 1, int 3
    store _10 to ref
    int _11 = call _EN3std8ArrayRefI3intE4sizeE(ArrayRef<int>* ref)
    store _11 to bb
    return int 0
}

void _EN4main3fooE8ArrayRefI3intE(ArrayRef<int> ints) {
    int* a = alloca int
    ArrayRef<int>* _0 = alloca ArrayRef<int>
    int* b = alloca int
    ArrayRef<int>* _1 = alloca ArrayRef<int>
    ArrayRef<int>* c = alloca ArrayRef<int>
    store ints to _0
    int* _2 = call _EN3std8ArrayRefI3intEixE3int(ArrayRef<int>* _0, int 1)
    int .load = load _2
    store .load to a
    store ints to _1
    int _3 = call _EN3std8ArrayRefI3intE4sizeE(ArrayRef<int>* _1)
    store _3 to b
    store ints to c
    return void
}

void _EN4main3barEPA3_3int(int[3]* ints) {
    int* b = alloca int
    ArrayRef<int>* ref = alloca ArrayRef<int>
    store int 3 to b
    int* _0 = getelementptr ints, 0
    ArrayRef<int> _1 = insertvalue ArrayRef<int> undefined, 0, _0
    ArrayRef<int> _2 = insertvalue _1, 1, int 3
    store _2 to ref
    return void
}

int _EN3std8ArrayRefI3intE4sizeE(ArrayRef<int>* this) {
    int* size = getelementptr this, 1
    int size.load = load size
    return size.load
}

int* _EN3std8ArrayRefI3intEixE3int(ArrayRef<int>* this, int index) {
    string* __str = alloca string
    bool _0 = index < int 0
    br _0, or.end(_0), or.rhs(_0)

or.rhs:
    int _1 = call _EN3std8ArrayRefI3intE4sizeE(ArrayRef<int>* this)
    bool _2 = index >= _1
    br or.end(_2)

or.end(bool or):
    br or, if.then, if.else

if.then:
    void _3 = call _EN3std6string4initEP4char3int(string* __str, char* "operator[]", int 10)
    string __str.load = load __str
    void _4 = call _EN3std8ArrayRefI3intE16indexOutOfBoundsE6string3int(ArrayRef<int>* this, string __str.load, int index)
    br if.end

if.else:
    br if.end

if.end:
    int** data = getelementptr this, 0
    int* data.load = load data
    int* _5 = getelementptr data.load, index
    return _5
}

void _EN3std8ArrayRefI3intE16indexOutOfBoundsE6string3int(ArrayRef<int>* this, string function, int index) {
    string* __str = alloca string
    string* _0 = alloca string
    string* __str_0 = alloca string
    int* _1 = alloca int
    string* __str_1 = alloca string
    int* _2 = alloca int
    void _3 = call _EN3std6string4initEP4char3int(string* __str, char* "ArrayRef.", int 9)
    store function to _0
    void _4 = call _EN3std6string4initEP4char3int(string* __str_0, char* ": index ", int 8)
    store index to _1
    void _5 = call _EN3std6string4initEP4char3int(string* __str_1, char* " is out of bounds, size is ", int 27)
    int _6 = call _EN3std8ArrayRefI3intE4sizeE(ArrayRef<int>* this)
    store _6 to _2
    never _7 = call _EN3std5abortI6string6string6string3int6string3intEEP6stringP6stringP6stringP3intP6stringP3int(string* __str, string* _0, string* __str_0, int* _1, string* __str_1, int* _2)
    return void
}

void _EN3std6string4initEP4char3int(string* this, char* pointer, int length) {
}

never _EN3std5abortI6string6string6string3int6string3intEEP6stringP6stringP6stringP3intP6stringP3int(string* _0, string* _1, string* _2, int* _3, string* _4, int* _5) {
}

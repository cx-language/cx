struct EnumeratedIterator<Element>: Copyable, Iterator<EnumeratedIteratorEntry<Element>> {
    ArrayIterator<Element> base;
    int index;

    EnumeratedIterator(ArrayIterator<Element> iterator) {
        base = iterator;
        index = 0;
    }

    bool hasValue() {
        return base.hasValue();
    }

    EnumeratedIteratorEntry<Element> value() {
        return EnumeratedIteratorEntry(base.value(), index);
    }

    void increment() {
        base.increment();
        index++;
    }
}

struct EnumeratedIteratorEntry<Value>: Copyable {
    Value* value;
    int index;
}

import "math.h";

struct Vector2: Copyable {
    float x;
    float y;

    Vector2(float x, float y) {
        this.x = x;
        this.y = y;
    }

    Vector2(float angle) {
        x = cosf(angle);
        y = sinf(angle);
    }

    Vector2 rotated(Vector2 origin, float angle) {
        var dx = x - origin.x;
        var dy = y - origin.y;
        var c = cosf(angle);
        var s = sinf(angle);
        return Vector2(c * dx - s * dy + origin.x, s * dx + c * dy + origin.y);
    }

    float distance(Vector2 other) {
        var dx = x - other.x;
        var dy = y - other.y;
        return sqrtf(dx * dx + dy * dy);
    }
}

Vector2 operator+(Vector2 a, Vector2 b) {
    return Vector2(a.x + b.x, a.y + b.y);
}

Vector2 operator-(Vector2 a, Vector2 b) {
    return Vector2(a.x - b.x, a.y - b.y);
}

Vector2 operator*(Vector2 a, float b) {
    return Vector2(a.x * b, a.y * b);
}
